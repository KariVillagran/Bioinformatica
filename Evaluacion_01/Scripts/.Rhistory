source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite("ALL")
library(Biostrings)
biocLite()
source("Biostrings")
library("Biostrings")
library("Biostring")
library(Biostring")
""
library(Biostring)
library(Biostrings)
biocLite(Biostrings)
biocLite()
source("https://bioconductor.org/biocLite.R")
biocLite()
library(Biostrings)
library("Biostrings")
biocLite(Biostrings)
biocLite("Biostrings")
library(Biostrings)
dnaSeq = DNAString("TTCAGATCTAGTTCGTGTGTGACTGATGATCTGTCACACGTTTTTCTGATCTTCTGACTAGTCGAT")
dnaSeq[1:10]
version
substr(dnaSeq,1,10)
length(dnaSeq) #Establece el largo de la secuencia
reverseComplement(dnaSeq) #Genera una cadena complementaria reversa
alphabetFrequency(dnaSeq) #Indica la cardinalidad de cada caracter
compareStrings(dnaSeq,dnaSeq)
dnaSeq2 = DNAString("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
compareStrings(dnaSeq,dnaSeq2)
dnaSeq = readDNAStringSet("D:\Proyectos\Bioinformatica\primates_14.fasta")
dnaSeq = readDNAStringSet("D:\\Proyectos\\Bioinformatica\\primates_14.fasta")
names(dnaSeq) #Conocer el nombre de las especies
length(dnaSeq) #Saber cuantas especies son
reverseComplement(dnaSeq[1]) #Complemento
alphabetFrequency(dnaSeq) #Contador de caracteres
dnaSeq = DNAString("TTCAGATCTAGTTCGTGTGTGACTGATGATCTGTCACACGTTTTTCTGATCTTCTGACTAGTCGAT")
library(Biostrings)
setwd("C:\\Users\\Kari\\Documents\\GitHub\\Bioinformatica\\Evaluacion_01\\Scripts")
dnaSeqUndifenid = readDNAStringSet("secuencia.fasta")
dnaSeqRatt = readDNAStringSet("rattusnorvegicuschromosomeY.fasta")
names(dnaSeqUndifenid)
names(dnaSeqRatt)
names(dnaSeqUndifenid)
names(dnaSeqRatt)
length(dnaSeqUndifenid)
length(dnaSeqRatt)
length(dnaSeqUndifenid[0])
compareStrings(dnaSeqUndifenid,dnaSeqRatt)
dnaSeqUndifenid = readDNAStringSet("secuencia.fasta")
compareStrings(dnaSeqUndifenid[0],dnaSeqRatt[0])
compareStrings(dnaSeqUndifenid,dnaSeqRatt)
mat = nucleotideSubstitutionMatrix(match=1, mismatch= -1,baseOnly = TRUE)
localAlign = pairwiseAlignment(dnaSeqUndifenid,dnaSeqRatt,type="local",substitutionMatrix = mat, gapOpening=0, gapExtension=-1)
localAlign = pairwiseAlignment(dnaSeqUndifenid[[1]],dnaSeqRatt[[1]],type="local",substitutionMatrix=mat, gapOpening=0, gapExtension=-1)
localAlign = pairwiseAlignment(dnaSeqUndifenid[1],dnaSeqRatt[1],type="local",substitutionMatrix=mat, gapOpening=0, gapExtension=-1)
